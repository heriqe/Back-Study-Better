
services:
  db:
    # Imagem oficial do MySQL 8.0
    image: mysql:8.0
    container_name: studybetter_db
    restart: unless-stopped
    environment:
      # Senha do usuário root do MySQL (MUDAR!)
      MYSQL_ROOT_PASSWORD: senharoot
      # Nome do banco de dados a ser criado
      MYSQL_DATABASE: studybetter
      # Usuário padrão para a aplicação (editar no arquivo .env se for usar)
      MYSQL_USER: ${MYSQL_USER:-sb_user}
      # Senha padrão para o usuário da aplicação (editar no arquivo .env se for usar)
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-sb_pass}
    volumes:
      # Persistência dos dados do banco
      - db_data:/var/lib/mysql
      # ARQUIVO CORRIGIDO: O arquivo init.sql está na raiz do projeto (banco_de_dados/init.sql) em relação ao docker-compose.dev.yml
      - ./src/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      # Mapeamento da porta do MySQL
      - "3306:3306"
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend_api:
    # Serviço para construir e rodar a API (Node/Nodemon)
    build:
      # CAMINHO CORRIGIDO: O contexto de build é a pasta atual (.), pois o Dockerfile.dev está na raiz.
      context: . # Caminho para a pasta raiz da sua aplicação
      dockerfile: Dockerfile.dev
    container_name: studybetter_api
    restart: unless-stopped
    environment:
      # Define o ambiente como desenvolvimento para Nodemon
      NODE_ENV: development
      # Porta da API
      PORT: ${API_PORT:-8000}
      # Host do banco de dados (o nome do serviço 'db')
      DB_HOST: db
      # Usuário do banco de dados (deve ser o mesmo configurado no serviço 'db')
      DB_USER: ${MYSQL_USER:-sb_user}
      # Senha do banco de dados (deve ser a mesma configurada no serviço 'db')
      DB_PASSWORD: ${MYSQL_PASSWORD:-sb_pass}
      # Nome do banco de dados (deve ser o mesmo configurado no serviço 'db')
      DB_NAME: ${MYSQL_DATABASE:-studybetter}
    ports:
      # Mapeamento da porta da API
      - "8000:3000"
      # Porta para debug (útil para VS Code)
      - "9229:9229"
    depends_on:
      db:
        # A API só inicia após o DB estar saudável
        condition: service_healthy
    volumes:
      # Montagem de volume para hot-reload/Nodemon: Sincroniza o código-fonte com o container
      # O volume agora aponta para a pasta atual (.), que é a raiz do seu projeto.
      - .:/usr/src/app:delegated
      # Exclui node_modules local para usar o do container (construído no Dockerfile)
      - /usr/src/app/node_modules
    # Comando de desenvolvimento que deve usar Nodemon (geralmente configurado em package.json)
    command: npm run dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${API_PORT:-8000}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  # Volume para persistência do banco de dados
  db_data:
